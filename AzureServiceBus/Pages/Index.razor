@page "/"
@using AzureServiceBus.Services
@using AzureServiceBus.Models
@inject IQueueService queue
@inject Microsoft.AspNetCore.Components.NavigationManager navigationManager

<PageTitle>Azure Service Bus</PageTitle>
<h3>Azure Service Bus Sender</h3>

<EditForm Model="@product">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <hr style="height:2px;border-width:0;color:gray;background-color:gray">
    <h3>Product</h3>

    <div class="form-group">
        <label for="name">Name</label>
        <InputText id="name" 
                   class="form-control" 
                   @bind-Value="product.Name" />
    </div>
    <div class="form-group">
        <label for="description">Description</label>
        <InputText id="description" 
                   class="form-control" 
                   @bind-Value="product.Description" />
    </div>
    <div class="form-group">
        <label for="category">Price</label>
        <InputText id="category" 
                   class="form-control" 
                   @bind-Value="product.Price" />
    </div>
    <div class="placeholder-100pct">&nbsp;</div>
    <button type="submit" 
            class="btn btn-primary" 
            Disabled="@(!context.IsModified() || !context.Validate())"
            @onclick="() => OpenDialog(product.Name)">Send</button>

</EditForm>

@if (DialogIsOpen)
{
    <Dialog Caption="Send Message to Service Bus"
        Message="@message"
        OnClose="@OnDialogClose"
        Type="Dialog.Category.SaveNot">
    </Dialog>
}

@code {

    private string message = "";
    private Product product = new Product();
    private bool DialogIsOpen = false;

    private void OpenDialog(string title)
    {
        DialogIsOpen = true;
        message =
        "Do you want to send \"" + title + "\" to Azure Service Bus?";
    }
    private async Task OnDialogClose(bool isOk)
    {
        if (isOk)
        {
            await queue.SendMessageAsync(product, "productqueue");
            product = new Product();

            navigationManager.NavigateTo("/", true, true);
        }
        DialogIsOpen = false;
    }
}